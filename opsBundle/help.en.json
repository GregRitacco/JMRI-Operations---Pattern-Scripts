{
  "> Align TrainPlayer and JMRI track types.": "> Align TrainPlayer and JMRI track types.", 
  "> JMRI Model Railroad scale.": "> JMRI Model Railroad scale.", 
  ">Add button to Panel Pro frame, plugin is not displayed but still enabled<": ">Add button to Panel Pro frame, plugin is not displayed but still enabled<", 
  ">All divisions (written by this plugin)<": ">All divisions (written by this plugin)<", 
  ">All locations (written by this plugin)<": ">All locations (written by this plugin)<", 
  ">All the pattern reports start with the creation of a json file. These files are created by this plugin and are written to the jsonManifests folder. They follow the illustrated format:<": ">All the pattern reports start with the creation of a json file. These files are created by this plugin and are written to the jsonManifests folder. They follow the illustrated format:<", 
  ">Alpha value<": ">Alpha value<", 
  ">Any of these colors can be changed<": ">Any of these colors can be changed<", 
  ">Apply Schedule flag (set by user, written by this plugin)<": ">Apply Schedule flag (set by user, written by this plugin)<", 
  ">Attribute Width<": ">Attribute Width<", 
  ">Blue value<": ">Blue value<", 
  ">Build Date<": ">Build Date<", 
  ">Build date from TrainPlayer.<": ">Build date from TrainPlayer.<", 
  ">Calendar year being modeled.<": ">Calendar year being modeled.<", 
  ">Color Definitions<": ">Color Definitions<", 
  ">Control Panel<": ">Control Panel<", 
  ">Core File List<": ">Core File List<", 
  ">Data for this subroutine is entered into the text boxes or if the o2o subroutine is activated, the additional railroad detail is imported from the TrainPlayer layout.<": ">Data for this subroutine is entered into the text boxes or if the o2o subroutine is activated, the additional railroad detail is imported from the TrainPlayer layout.<", 
  ">Default panel height<": ">Default panel height<", 
  ">Default panel width<": ">Default panel width<", 
  ">Depending upon the task, any of the json files will then be written into a Pattern Report or Switchlist text file or exported to TrainPlayer as a WorkEvents csv file.<": ">Depending upon the task, any of the json files will then be written into a Pattern Report or Switchlist text file or exported to TrainPlayer as a WorkEvents csv file.<", 
  ">Description of the Throwback plugin<": ">Description of the Throwback plugin<", 
  ">Description<": ">Description<", 
  ">Destination Track designator<": ">Destination Track designator<", 
  ">Destination designator<": ">Destination designator<", 
  ">Each JMRI profile gets its own configuration file, which is named PatternConfig.json. It is found in the operations folder, and is used to provide custom settings for each profile and record user inputs.": ">Each JMRI profile gets its own configuration file, which is named PatternConfig.json. It is found in the operations folder, and is used to provide custom settings for each profile and record user inputs.", 
  ">Final Destination designator<": ">Final Destination designator<", 
  ">Final destination Track designator<": ">Final destination Track designator<", 
  ">Green value<": ">Green value<", 
  ">Help Page - Pattern Scripts plugin for JMRI<": ">Help Page - Pattern Scripts plugin for JMRI<", 
  ">How to add this plugin to JMRI<": ">How to add this plugin to JMRI<", 
  ">How to modify this plugin</A></p>": ">How to modify this plugin</A></p>", 
  ">How to set up this plugin<": ">How to set up this plugin<", 
  ">How to translate this plugin<": ">How to translate this plugin<", 
  ">Ignore Track Length flag (set by user, written by this plugin)<": ">Ignore Track Length flag (set by user, written by this plugin)<", 
  ">Introduction<": ">Introduction<", 
  ">Layout Details<": ">Layout Details<", 
  ">Layout Name<": ">Layout Name<", 
  ">Layout name, from settings or TrainPlayer.<": ">Layout name, from settings or TrainPlayer.<", 
  ">List of TrainPlayer caboose car codes.<": ">List of TrainPlayer caboose car codes.<", 
  ">List of TrainPlayer car codes for passenger cars.<": ">List of TrainPlayer car codes for passenger cars.<", 
  ">Location Modeled<": ">Location Modeled<", 
  ">Location of the prototype.<": ">Location of the prototype.<", 
  ">Location<": ">Location<", 
  ">Model Railroad Scale<": ">Model Railroad Scale<", 
  ">Model railroad scale, from settings or TrainPlayer.<": ">Model railroad scale, from settings or TrainPlayer.<", 
  ">Not all fields need be entered.<": ">Not all fields need be entered.<", 
  ">Open System Console Window on starting plugin<": ">Open System Console Window on starting plugin<", 
  ">Operating Railroad Name<": ">Operating Railroad Name<", 
  ">Operating Railroad<": ">Operating Railroad<", 
  ">Operating railroad, the one that owns the tracks.<": ">Operating railroad, the one that owns the tracks.<", 
  ">Operational Territory<": ">Operational Territory<", 
  ">Organization<": ">Organization<", 
  ">Overview of this plugin<": ">Overview of this plugin<", 
  ">Pattern Height<": ">Pattern Height<", 
  ">Pattern Location (written by this plugin)<": ">Pattern Location (written by this plugin)<", 
  ">Pattern Report for Track Window<": ">Pattern Report for Track Window<", 
  ">Pattern Scripts plugin - Video Documentation<": ">Pattern Scripts plugin - Video Documentation<", 
  ">Pattern Scripts plugin settings in PatternConfig.json<": ">Pattern Scripts plugin settings in PatternConfig.json<", 
  ">Pattern Scripts plugin<": ">Pattern Scripts plugin<", 
  ">Pattern Width<": ">Pattern Width<", 
  ">Pattern-Tracks (written by this plugin)<": ">Pattern-Tracks (written by this plugin)<", 
  ">PatternConfig.json<": ">PatternConfig.json<", 
  ">Patterns Subroutine settings in configFile.json<": ">Patterns Subroutine settings in configFile.json<", 
  ">Patterns Subroutine settings<": ">Patterns Subroutine settings<", 
  ">Patterns Subroutine<": ">Patterns Subroutine<", 
  ">Plugin Layout<": ">Plugin Layout<", 
  ">Plugin location, X axis<": ">Plugin location, X axis<", 
  ">Plugin location, Y axis<": ">Plugin location, Y axis<", 
  ">Red value<": ">Red value<", 
  ">Report Modifiers<": ">Report Modifiers<", 
  ">Reserved<": ">Reserved<", 
  ">Revision control<": ">Revision control<", 
  ">Row Multiplier<": ">Row Multiplier<", 
  ">Scale Rubric<": ">Scale Rubric<", 
  ">Script encoding<": ">Script encoding<", 
  ">Select Tools/Edit Config File. If a mistake is made editing the PatternConfig.json file, the plugin will delete the file and provide a new one to start over with. Worst case the plugin may crash. If that should happed select Tools/Restart From Default.</p>": ">Select Tools/Edit Config File. If a mistake is made editing the PatternConfig.json file, the plugin will delete the file and provide a new one to start over with. Worst case the plugin may crash. If that should happed select Tools/Restart From Default.</p>", 
  ">Sort Cars<": ">Sort Cars<", 
  ">Sort Locomotives<": ">Sort Locomotives<", 
  ">Subroutine Panel<": ">Subroutine Panel<", 
  ">Subroutines - Video Documentation<": ">Subroutines - Video Documentation<", 
  ">Subroutines.jPlus.View.ManageGui<": ">Subroutines.jPlus.View.ManageGui<", 
  ">Subroutines.o2o.View.ManageGui<": ">Subroutines.o2o.View.ManageGui<", 
  ">Territory Modeled<": ">Territory Modeled<", 
  ">Territory. Name of the particular operation being modeled.<": ">Territory. Name of the particular operation being modeled.<", 
  ">The Pattern Scripts plugin can be thought of as a framework for hosting subroutines for JMRI Operations Pro that require a user interface. This plugin comes with four subroutines; jPlus, Patterns, o2o and Throwback. A template is also included to serve as scaffolding for someone wishing to add their own subroutine. Although the subroutines are somewhat interdependent, they may be activated or deactivated individually as needed.</p>": ">The Pattern Scripts plugin can be thought of as a framework for hosting subroutines for JMRI Operations Pro that require a user interface. This plugin comes with four subroutines; jPlus, Patterns, o2o and Throwback. A template is also included to serve as scaffolding for someone wishing to add their own subroutine. Although the subroutines are somewhat interdependent, they may be activated or deactivated individually as needed.</p>", 
  ">The Pattern Scripts plugin for JMRI is a suite of subroutines for JMRI Operations Pro. The use of this plugin is documented in the following list of videos. The videos are recorded in the English language.<": ">The Pattern Scripts plugin for JMRI is a suite of subroutines for JMRI Operations Pro. The use of this plugin is documented in the following list of videos. The videos are recorded in the English language.<", 
  ">The Patterns subroutine can generate pattern reports for tracks at a single location. Additionally, cars can be moved from track to track within a location. Optionally, if a car is moved onto a spur, the schedule for that spur can be applied.<": ">The Patterns subroutine can generate pattern reports for tracks at a single location. Additionally, cars can be moved from track to track within a location. Optionally, if a car is moved onto a spur, the schedule for that spur can be applied.<", 
  ">The description of each element is in blue<": ">The description of each element is in blue<", 
  ">The enhanced fields are as follows:<": ">The enhanced fields are as follows:<", 
  ">The following chart shows the code structure of this plugin.<": ">The following chart shows the code structure of this plugin.<", 
  ">The j Plus subroutine adds enhanced railroad detail to reports generated by both JMRI and this plugin.<": ">The j Plus subroutine adds enhanced railroad detail to reports generated by both JMRI and this plugin.<", 
  ">The jPlus Subroutine<": ">The jPlus Subroutine<", 
  ">The ops to ops (o2o) subroutine is a group of utilities that are designed to be the glue that allows JMRI Operations Pro to be the operations engine for TrainPlayer\u00a9. The idea is to expand the capability of TrainPlayer\u00a9's Advanced Ops feature to include the flexibility of Operations Pro,while also eleminating the tedium of keeping two databases synchronised.<": ">The ops to ops (o2o) subroutine is a group of utilities that are designed to be the glue that allows JMRI Operations Pro to be the operations engine for TrainPlayer\u00a9. The idea is to expand the capability of TrainPlayer\u00a9's Advanced Ops feature to include the flexibility of Operations Pro,while also eleminating the tedium of keeping two databases synchronised.<", 
  ">The table below shows which program manages which elements.<": ">The table below shows which program manages which elements.<", 
  ">This is railroad that owns or operates the tracks being modeled. Any name can be entered such as 'PRR' or 'BN UPRR Joint' or 'G&D'.<": ">This is railroad that owns or operates the tracks being modeled. Any name can be entered such as 'PRR' or 'BN UPRR Joint' or 'G&D'.<", 
  ">This is the railroad's name for the part being modeled, such as 'Long Beach Intermodal Terminal' or 'Salem Glass Works Branch'.<": ">This is the railroad's name for the part being modeled, such as 'Long Beach Intermodal Terminal' or 'Salem Glass Works Branch'.<", 
  ">Throwback Subroutine settings<": ">Throwback Subroutine settings<", 
  ">Throwback plugin settings in configFile.json<": ">Throwback plugin settings in configFile.json<", 
  ">Throwback plugin<": ">Throwback plugin<", 
  ">Track Pattern Subroutine - Demonstration at a yard<": ">Track Pattern Subroutine - Demonstration at a yard<", 
  ">Track Pattern Subroutine - Demonstration at industry<": ">Track Pattern Subroutine - Demonstration at industry<", 
  ">Track Pattern, Switch List and Work Event json format<": ">Track Pattern, Switch List and Work Event json format<", 
  ">TrainPlayer Include flag (set by user, written by this plugin)<": ">TrainPlayer Include flag (set by user, written by this plugin)<", 
  ">Translation Choice<": ">Translation Choice<", 
  ">Translation Services<": ">Translation Services<", 
  ">Tweek Operations, adjustments to operations settings<": ">Tweek Operations, adjustments to operations settings<", 
  ">User editable keys are described in green<": ">User editable keys are described in green<", 
  ">Vague Description<": ">Vague Description<", 
  ">Where the the railroad is located, such as 'The Great Divide' or 'The Bronx, New York'.<": ">Where the the railroad is located, such as 'The Great Divide' or 'The Bronx, New York'.<", 
  ">Which year the model railroad is based on, this is a mirror of 'JMRI/OperationsPro/Settings/Year Modeled'.<": ">Which year the model railroad is based on, this is a mirror of 'JMRI/OperationsPro/Settings/Year Modeled'.<", 
  ">Who Does What<": ">Who Does What<", 
  ">Yard Tracks Only flag (set by user, written by this plugin)<": ">Yard Tracks Only flag (set by user, written by this plugin)<", 
  ">Year Modeled<": ">Year Modeled<", 
  ">j Plus Subroutine settings in configFile.json<": ">j Plus Subroutine settings in configFile.json<", 
  ">j Plus Subroutine<": ">j Plus Subroutine<", 
  ">jPlus Subroutine settings<": ">jPlus Subroutine settings<", 
  ">o2o Subroutine settings in configFile.json<": ">o2o Subroutine settings in configFile.json<", 
  ">o2o Subroutine settings<": ">o2o Subroutine settings<", 
  ">o2o Subroutine<": ">o2o Subroutine<", 
  ">o2o, the ops to ops subroutine for TrainPlayer\u00a9<": ">o2o, the ops to ops subroutine for TrainPlayer\u00a9<"
}